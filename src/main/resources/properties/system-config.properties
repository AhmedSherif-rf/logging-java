#File is dedicated to store system configurations. 

#a property that specifies the secret key used for JSON Web Token (JWT) authentication in a Spring Security configuration.
application.security.jwt.secret-key= ${SECRET_KEY:7R9SATCVDWEYGZH2K4M5N7Q8R9SBUCVDXFYGZJ3K4M6P7Q8SATBUDWEXFZ}

#a property that sets the expiration time for JSON Web Tokens (JWTs) in a Spring Security configuration, determining the duration of validity for authentication tokens.
application.security.jwt.expiration= ${JWT_EXPIRATION_TIME:18000000}

#a property specifying the duration of validity for refresh tokens in a security configuration, defining how long a refresh token remains valid for token refreshment.
refresh.token.validity=${REFRESH_TOKEN_VALIDITY:36000000}

#a property that represents the default language identifier for a company, typically used in configurations to define the default language for multilingual applications.
company.default.langId=${COMPANY_LANGUAGE:en}

#Allowed origins for Cross-Origin Resource Sharing (CORS)
response.cors.origin=${RESPONSE_CORS_ORIGIN:http://localhost:8080,http://localhost:3000}

#Log level for Spring Security framework
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:INFO}

#Configuration file for logging
logging.config=${LOG_CONFIG_FILE:classpath:logback.xml}

#File name and path for log storage
logging.file.name=${LOG_FILE:hub/logs/ServerLog.log}

# Set the root log level
logging.level.root=${ROOT_LOG_LEVEL:INFO}

# Set debug log level for a specific package
logging.level.com.webatts.payment.p2p=${APP_PKG_LOG_LEVEL:DEBUG}

#Log level for RestTemplate HTTP client
logging.level.org.springframework.web.client.RestTemplate=${HTTP_CLIENT_LOG_LEVEL:INFO}

allow.concurrent.login=${ALLOW_CONCURRENT_LOGIN:true}

swagger.enable=${SWAGGER_ENABLE:true}